/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/redhat-nfvpe/cluster-api-provider-baremetal/pkg/apis/baremetalproviderconfig/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// BaremetalProviderConfigLister helps list BaremetalProviderConfigs.
type BaremetalProviderConfigLister interface {
	// List lists all BaremetalProviderConfigs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.BaremetalProviderConfig, err error)
	// BaremetalProviderConfigs returns an object that can list and get BaremetalProviderConfigs.
	BaremetalProviderConfigs(namespace string) BaremetalProviderConfigNamespaceLister
	BaremetalProviderConfigListerExpansion
}

// baremetalProviderConfigLister implements the BaremetalProviderConfigLister interface.
type baremetalProviderConfigLister struct {
	indexer cache.Indexer
}

// NewBaremetalProviderConfigLister returns a new BaremetalProviderConfigLister.
func NewBaremetalProviderConfigLister(indexer cache.Indexer) BaremetalProviderConfigLister {
	return &baremetalProviderConfigLister{indexer: indexer}
}

// List lists all BaremetalProviderConfigs in the indexer.
func (s *baremetalProviderConfigLister) List(selector labels.Selector) (ret []*v1alpha1.BaremetalProviderConfig, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BaremetalProviderConfig))
	})
	return ret, err
}

// BaremetalProviderConfigs returns an object that can list and get BaremetalProviderConfigs.
func (s *baremetalProviderConfigLister) BaremetalProviderConfigs(namespace string) BaremetalProviderConfigNamespaceLister {
	return baremetalProviderConfigNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// BaremetalProviderConfigNamespaceLister helps list and get BaremetalProviderConfigs.
type BaremetalProviderConfigNamespaceLister interface {
	// List lists all BaremetalProviderConfigs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.BaremetalProviderConfig, err error)
	// Get retrieves the BaremetalProviderConfig from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.BaremetalProviderConfig, error)
	BaremetalProviderConfigNamespaceListerExpansion
}

// baremetalProviderConfigNamespaceLister implements the BaremetalProviderConfigNamespaceLister
// interface.
type baremetalProviderConfigNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all BaremetalProviderConfigs in the indexer for a given namespace.
func (s baremetalProviderConfigNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.BaremetalProviderConfig, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BaremetalProviderConfig))
	})
	return ret, err
}

// Get retrieves the BaremetalProviderConfig from the indexer for a given namespace and name.
func (s baremetalProviderConfigNamespaceLister) Get(name string) (*v1alpha1.BaremetalProviderConfig, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("baremetalproviderconfig"), name)
	}
	return obj.(*v1alpha1.BaremetalProviderConfig), nil
}
